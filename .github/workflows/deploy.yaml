name: Deploy EC2 with Terraform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
# Job 1
  lint-and-test:
    name: Check code and test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
  
    - name: Run flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --max-complexity=10 --max-line-length=88 --statistic
    
    - name: Run tests with coverage
      run: |
        pytest --cov=app --cov-report=xml --cov-report=term

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.xml

    - name: Run tests and generate report
      run: |
        mkdir -p reports
        PYTHONPATH=. pytest --html=reports/report.html

    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: reports/report.html

# Job 2
  terraform: 
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: lint-and-test
        
    env:
          AWS_REGION: eu-central-1 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform
    
# Job 3
  deploy:
    name: Deploy EC2
    runs-on: ubuntu-latest
    needs: terraform
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy Flask App via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo -i
          cd /home/ubuntu/
          cd gitrep/
          cd cloud-deploy-sample/
          git pull
          rm -rf venv
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          python app/main.py
